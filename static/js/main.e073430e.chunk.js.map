{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","hooks/usePeopleFetch.js","components/CheckBox/CheckBox.js","components/UserList/style.js","components/UserList/UserList.js","pages/Home/style.js","pages/Home/Home.js","components/FavoriteList/style.js","components/FavoriteList/FavoriteList.js","pages/Favorites/style.js","pages/Favorites/Favorites.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","Spinner","color","thickness","variant","CircularProgress","CheckBox","usePeopleFetch","useState","users","setUsers","isLoading","setIsLoading","fetchUsers","a","axios","get","response","data","results","useEffect","isChecked","onChange","label","value","FormControlLabel","control","Checkbox","checked","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","hoveredUserId","setHoveredUserId","BR","AU","CA","DE","NO","checkedCountry","setCheckedCountry","Brazil","Australia","Canada","Germany","Norway","country","check","setCheck","favorites","setFavorites","JSON","parse","localStorage","getItem","setItem","stringify","handleMouseLeave","getIsVisible","user","includes","handleChange","filter","location","map","index","onMouseEnter","handleMouseEnter","onClick","ind","indexOf","slice","concat","handleMouseClick","onMouseLeave","src","picture","large","alt","name","title","first","last","email","street","number","city","IconButton","Home","Content","Header","FavoriteList","Favorites","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createMuiTheme","palette","type","primary","main","error","CssBaseline","NavBar","setValue","history","useHistory","AppBar","position","style","top","Tabs","_e","newValue","aria-label","indicatorColor","textColor","Tab","push","AppRouter","exact","path","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.e073430e.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner = ({ size, color, thickness, variant }) => {\r\n  return (\r\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckBox = styled.div``;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const usePeopleFetch = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  async function fetchUsers() {\r\n    setIsLoading(true);\r\n    const response = await axios.get(`https://randomuser.me/api/?results=25&page=1`);\r\n    setIsLoading(false);\r\n    setUsers(response.data.results);\r\n  }\r\n\r\n  return { users, isLoading, fetchUsers };\r\n};\r\n\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as S from \"./style\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport fetchUsers from \"hooks/usePeopleFetch\";\r\n\r\n\r\n\r\nconst CheckBox = ({isChecked, onChange, label, value }) => {\r\n\r\n  const handleChange = () => {\r\n    onChange && onChange(value);\r\n    \r\n    \r\n  };\r\n\r\n  return (\r\n    \r\n    <S.CheckBox>\r\n      <FormControlLabel\r\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\r\n        label={label}\r\n      />\r\n    </S.CheckBox>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport * as S from \"./style\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\nconst UserList = ({ users, isLoading }) => {\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n  const [checkedCountry, setCheckedCountry] = useState({BR: false, AU: false,CA: false, DE: false, NO: false});\r\n  const [country, setCountry] = useState({Brazil: \"BR\", Australia: \"AU\", Canada: \"CA\", Germany: \"DE\", Norway : \"NO\"});\r\n  const [check,setCheck]=useState(0);\r\n  const [favorites, setFavorites] = useState([]);\r\n  \r\n  \r\n\r\n  useEffect(() => { \r\n    setFavorites(JSON.parse(localStorage.getItem(\"favorites\")))\r\n  },[]);\r\n    \r\n  useEffect(() => { \r\n    localStorage.setItem(\"favorites\",JSON.stringify(favorites)) \r\n  } ,[favorites]);\r\n\r\n\r\n   const handleMouseClick = (user) => {\r\n    if(favorites){\r\n      let ind = favorites.indexOf(user);\r\n      if(ind> -1)\r\n      {\r\n        setFavorites(favorites.slice(0,ind).concat(favorites.slice(ind+1)));\r\n      }\r\n      else\r\n      {\r\n        //localStorage.setItem(\"favorites\",JSON.stringify(favorites));\r\n        setFavorites([...favorites, user]);\r\n      }\r\n    }\r\n    else{\r\n      setFavorites([user]);\r\n    }\r\n  };\r\n\r\n  const handleMouseEnter = (user) => {\r\n    setHoveredUserId(user);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };\r\n\r\n  const getIsVisible=(user)=>\r\n  {\r\n    if(favorites){\r\n      if(user === hoveredUserId || favorites.includes(user))\r\n        return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleChange =(value) =>\r\n  {\r\n    if(checkedCountry[value])\r\n    {\r\n      setCheck(check-1);\r\n    }\r\n    else\r\n    {\r\n      setCheck(check+1);\r\n    }\r\n    setCheckedCountry({...checkedCountry, [value]: !checkedCountry[value]});\r\n  }; \r\n \r\n  const getUser=(user)=>\r\n  {\r\n    if(check===0)\r\n      return true;\r\n    if(checkedCountry[country[user.location.country]]== true )\r\n    {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n\r\n  return (\r\n    <S.UserList>\r\n      <S.Filters>\r\n        <CheckBox value=\"BR\" label=\"Brazil\" onChange={handleChange} isChecked={checkedCountry.BR} />\r\n        <CheckBox value=\"AU\" label=\"Australia\" onChange={handleChange} isChecked={checkedCountry.AU}/>\r\n        <CheckBox value=\"CA\" label=\"Canada\" onChange={handleChange} isChecked={checkedCountry.CA}/>\r\n        <CheckBox value=\"DE\" label=\"Germany\" onChange={handleChange} isChecked={checkedCountry.DE}/>\r\n        <CheckBox value=\"NO\" label=\"Norway\" onChange={handleChange} isChecked={checkedCountry.NO}/>\r\n      </S.Filters>\r\n      <S.List>\r\n        {users.filter(getUser).map((user, index) => {\r\n            return (\r\n              <S.User\r\n                key={index}\r\n                onMouseEnter={() => handleMouseEnter(user)}\r\n                onClick={( )=> handleMouseClick(user)}\r\n                onMouseLeave={handleMouseLeave}\r\n              >\r\n                <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n                <S.UserInfo>\r\n                  <Text size=\"22px\" bold>\r\n                    {user?.name.title} {user?.name.first} {user?.name.last}\r\n                  </Text>\r\n                  <Text size=\"14px\">{user?.email}</Text>\r\n                  <Text size=\"14px\">\r\n                    {user?.location.street.number} {user?.location.street.name}\r\n                  </Text>\r\n                  <Text size=\"14px\">\r\n                    {user?.location.city} {user?.location.country}\r\n                  </Text>\r\n                </S.UserInfo>\r\n                <S.IconButtonWrapper isVisible={getIsVisible(user)}>\r\n                  <IconButton>\r\n                    <FavoriteIcon color=\"error\" />\r\n                  </IconButton>\r\n                </S.IconButtonWrapper>\r\n              </S.User>\r\n            );\r\n            })}\r\n        {isLoading && (\r\n          <S.SpinnerWrapper>\r\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n          </S.SpinnerWrapper>\r\n        )}\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n};\r\n\r\nexport default UserList;","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport * as S from \"./style\";\r\n\r\nconst Home = () => {\r\n  const { users, isLoading } = usePeopleFetch();\r\n\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFinder\r\n          </Text>\r\n        </S.Header>\r\n        <UserList users={users} isLoading={isLoading} />\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FavoriteList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport * as S from \"./style\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\nconst FavoriteList = ({ isLoading }) => {\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n  const [favorites, setFavorites] = useState([]);\r\n\r\n  useEffect(() => { \r\n    setFavorites(JSON.parse(localStorage.getItem(\"favorites\")))\r\n  },[]);\r\n    \r\n  useEffect(() => { \r\n    localStorage.setItem(\"favorites\",JSON.stringify(favorites)) \r\n  } ,[favorites]);\r\n\r\n\r\n   const handleMouseClick = (user) => {\r\n    let ind = favorites.indexOf(user);\r\n    if(ind> -1)\r\n    {\r\n      setFavorites(favorites.slice(0,ind).concat(favorites.slice(ind+1)));\r\n    }\r\n    else\r\n    {\r\n      //localStorage.setItem(\"favorites\",JSON.stringify(favorites));\r\n      setFavorites([...favorites, user]);\r\n    }\r\n  };\r\n\r\n  const handleMouseEnter = (user) => {\r\n    setHoveredUserId(user);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };\r\n\r\n  const getIsVisible=(user)=>\r\n  {\r\n    if(user === hoveredUserId || favorites.includes(user))\r\n      return true;\r\n    return false;\r\n  };\r\n\r\n  if(favorites){\r\n    return (\r\n      <S.FavoriteList>\r\n        <S.List>\r\n          { \r\n          favorites.map((user, index) => {\r\n              return (\r\n                <S.User\r\n                  key={index}\r\n                  onMouseEnter={() => handleMouseEnter(user)}\r\n                  onClick={( )=> handleMouseClick(user)}\r\n                  onMouseLeave={handleMouseLeave}\r\n                >\r\n                  <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n                  <S.UserInfo>\r\n                    <Text size=\"22px\" bold>\r\n                      {user?.name.title} {user?.name.first} {user?.name.last}\r\n                    </Text>\r\n                    <Text size=\"14px\">{user?.email}</Text>\r\n                    <Text size=\"14px\">\r\n                      {user?.location.street.number} {user?.location.street.name}\r\n                    </Text>\r\n                    <Text size=\"14px\">\r\n                      {user?.location.city} {user?.location.country}\r\n                    </Text>\r\n                  </S.UserInfo>\r\n                  <S.IconButtonWrapper isVisible={getIsVisible(user)}>\r\n                    <IconButton>\r\n                      <FavoriteIcon color=\"error\" />\r\n                    </IconButton>\r\n                  </S.IconButtonWrapper>\r\n                </S.User>\r\n                \r\n              );\r\n              })}\r\n          {isLoading && (\r\n            <S.SpinnerWrapper>\r\n              <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n            </S.SpinnerWrapper>\r\n          )}\r\n        </S.List>\r\n      </S.FavoriteList>\r\n    );\r\n  };\r\n  return null;\r\n}\r\n\r\nexport default FavoriteList;","import styled from \"styled-components\";\r\n\r\nexport const Favorites = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport FavoriteList from \"components/FavoriteList\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport * as S from \"./style\";\r\n\r\n\r\n\r\nconst Favorites = () => {\r\n  const {isLoading}  = usePeopleFetch();\r\n  return (\r\n    <S.Favorites>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            Favorites\r\n          </Text>\r\n        </S.Header>\r\n        <FavoriteList  isLoading={isLoading} />\r\n      </S.Content>\r\n    </S.Favorites>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React from \"react\";\r\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React, { useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n  const [value, setValue] = useState(0);\r\n  const history = useHistory();\r\n\r\n  const handleChange = (_e, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  \r\n  return (\r\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n      >\r\n        <Tab label=\"Home\" index={0} onClick= {()=> {history.push('/')}}/>\r\n        <Tab label=\"Favorites\" index={1} onClick= {()=> {history.push('/favorites')}}/>\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home } from \"pages\";\r\nimport { Favorites } from \"pages\";\r\nimport { ThemeProvider } from \"theme\";\r\nimport NavBar from \"components/NavBar\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <ThemeProvider>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/favorites\" component={Favorites} />\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\n\r\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}